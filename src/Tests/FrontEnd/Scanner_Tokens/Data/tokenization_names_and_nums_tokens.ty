// Names and Nums tokens -- tokenization test source
/***
i.e. identifiers, function and class names, reserved keywords, integer and float numbers
***/
a b c d e f g h i j k l m n o p q r s t u v w x y z
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
_ _name __ident__ __ set_num
qmsli Qbhjken _123 a1 b2 c3d_ abstract1 _const i_uint32
py python java javascript cpp m6809
abstract public const uint8 my_abstract_function
	return ret
float32 f_num
volatile bool is_ok
assert is_ok
ensure is_ok
require is_ok
if is_ok and is_ok or not is_ok
pass nop
elif elsif elseif else if True true False false
else
array< uint16 >
with var as _var
from import all
for int8 i in
forever
break
continue
list map set enum file
class
hidden local private protected final
switch case
unnamed lambda
operator cast
try except finally raise
is me none None
while repeat until
embed exclude
char char16 del float64 int16 int32 int64 str str16 uint32 uint64
UInt8 Float32 float double Str string Class
0 1 2 3 4 5 6 7 8 9 _0 _1 _2 _3 _4 _5 _6 _7 _8 _9
123.456 123e45 79.46E+13 79.46e+13
-12 -12e008 -12e-009 -12.e-9
123_456_789 1_234.567_89e1_234
0x123456789abcdefABCDEF
0b010_101
01234567
0123456789
0x0123456789abcdefABCDEFg
0b012
45__678 123.456__789 15_ _123_456_789
var_name1&var_name2
45+-45
125abc
236_abc
type
